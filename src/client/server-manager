#!/usr/bin/env python

# vim: tabstop=4 shiftwidth=4 softtabstop=4
"""
   Name : server-manager.py
   Author : Abhay Joshi
   Description : This program is a simple cli interface with
   wrapper code to call individual programs such as create, show
   etc.
"""
import argparse
import pdb
import sys
import smgr_delete
import smgr_show
import smgr_upload_image
import smgr_reimage_server
import smgr_provision_server
import smgr_restart_server
import smgr_status
import smgr_add
import smgr_client_def
import smgr_run_inventory

commands_dict = {
    'add' : smgr_add.add_config,
    'delete' : smgr_delete.delete_config,
    'show'   : smgr_show.show_config,
    'reimage' : smgr_reimage_server.reimage_server,
    'provision' : smgr_provision_server.provision_server,
    'restart' : smgr_restart_server.restart_server,
    'upload_image' : smgr_upload_image.upload_image,
    'status' : smgr_status.show_server_status,
    'run_inventory'  : smgr_run_inventory.run_inventory
    }

def server_manager(args_str=None):
    if not args_str:
        args_str = sys.argv[1:]

    # Process the arguments
    parser = argparse.ArgumentParser(
        description='''server manager client program''',
        usage= '''server-manager [-c <config_file>] <command> [<args>]

The server manager commands are:
   add            Add server manager objects(create or modify server manager objects)
   delete         Delete server manager objects
   show           Show server manager objects configuration
   reimage        Prepare servers for reimaging with given image
   provision      Provision servers to provide configured roles
   run_inventory  Run inventory on a particular server or cluster
   restart        Restart servers 
   upload_image   Upload images to server manager DB
   status         Status of servers

'''
    )
    parser.add_argument("--config_file", "-c",
                        help=("Server manager client config file"
                        " (default - %s)" %(
                        smgr_client_def._DEF_SMGR_CFG_FILE)))
    parser.add_argument(
        'command',
        help='server manager command to run',
        choices=['add', 'delete',
                 'show', 'reimage', 'provision',
                 'restart', 'upload_image', 'status', 'run_inventory'])
    if len(sys.argv) > 1  and (sys.argv[1] == '-c' or sys.argv[1] == '--config_file'):
        args = parser.parse_args(sys.argv[1:4])
        argv = sys.argv[1:3] + sys.argv[4:] 
    else:
        args = parser.parse_args(sys.argv[1:2])
        argv = sys.argv[2:]
    commands_dict[args.command](argv)
# End of server_manager

if __name__ == "__main__":
    import cgitb
    cgitb.enable(format='text')

    server_manager(sys.argv[1:])
# End if __name__
